[build-system]
requires = ["scikit-build-core>=0.10", "setuptools_scm"]
build-backend = "scikit_build_core.build"

[project]
name = "pynvbench"
description = "CUDA Kernel Benchmarking Package"
authors = [{ name = "NVIDIA Corporation" }]
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Environment :: GPU :: NVIDIA CUDA",
  "License :: OSI Approved :: Apache Software License",
]
requires-python = ">=3.9"
dependencies = [
  # pathfinder
  "cuda-bindings",

  # Library expects to find shared libraries
  # libcupti, libnvperf_target, libnvperf_host
  # pathfinder is used to find it in the Python layout
  "nvidia-cuda-cupti-cu12",

  # The shared library
  # libnvidia-ml must be installed system-wide
  # (Debian package provider: libnvidia-compute)
]
dynamic = ["version"]
readme = { file = "README.md", content-type = "text/markdown" }

[project.optional-dependencies]
test = ["pytest", "cupy-cuda12x", "numba"]

[project.urls]
Homepage = "https://developer.nvidia.com/"

[tool.scikit-build]
minimum-version = "build-system.requires"
build-dir = "build/{wheel_tag}"

[tool.scikit-build.cmake]
version = ">=3.30.4"
args = []
build-type = "Release"
source-dir = "."

[tool.scikit-build.ninja]
version = ">=1.11"
make-fallback = true

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]
root = ".."

[tool.scikit-build.wheel.packages]
"cuda/nvbench" = "cuda/nvbench"
